INSERT INTO prueba_dificil(id, enunciado, codigo, respuesta) VALUES (-1, '¿Cuál es el resultado de la función recursiva siguiente?', E'def recursive_func(n):\n    if n <= 1:\n        return n\n    return recursive_func(n-1) + recursive_func(n-2)\n\nresult = recursive_func(5)\nprint(result)', '5');
INSERT INTO prueba_dificil(id, enunciado, codigo, respuesta) VALUES (-2, '¿Cuál es la salida de este código?', E'matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\nfor row in matrix:\n    for element in row:\n        print(element, end=" ")\n    print()', '1 2 3 4 5 6 7 8 9 ');
INSERT INTO prueba_dificil(id, enunciado, codigo, respuesta) VALUES (-3, '¿Cuál es el valor final de la variable `x`?', E'x = 10\n\ndef change_value(num):\n    num += 5\n\nchange_value(x)\nprint(x)', '10');
INSERT INTO prueba_dificil(id, enunciado, codigo, respuesta) VALUES (-4, '¿Qué hace el siguiente código?', E'def custom_sort(lst):\n    return sorted(lst, key=lambda x: x % 10)\n\nnumbers = [57, 23, 102, 66, 888, 45]\nsorted_numbers = custom_sort(numbers)\nprint(sorted_numbers)', '[102, 23, 45, 66, 888, 57]');